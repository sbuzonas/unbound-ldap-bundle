<?xml version="1.0"?>
<ruleset name="CarnegieLearning">
    <description>The coding standard for Carnegie Learning.</description>

    <file>.</file>

    <exclude-pattern>./app/*</exclude-pattern>

    <!-- Exclude 3rd party sources -->
    <exclude-pattern>./vendor/*</exclude-pattern>

    <arg name="report" value="full"/>
    <arg name="report-checkstyle" value="reports/checkstyle-phpcs.xml"/>
    <arg name="extensions" value="php"/>
    <arg name="encoding" value="utf-8"/>
    <arg value="np"/>
    <arg name="colors"/>

    <rule ref="PSR2"/>

    <rule ref="Generic.Formatting.MultipleStatementAlignment"/>

    <rule ref="Generic.Arrays.DisallowShortArraySyntax"/>
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Commenting.DocComment"/>
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="Generic.Files.EndFileNewline"/>
    <rule ref="Generic.Files.InlineHTML"/>
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="Generic.Files.OneInterfacePerFile"/>
    <rule ref="Generic.Files.OneTraitPerFile"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.PHP.SAPIUsage"/>
    <rule ref="Generic.PHP.Syntax"/>
    <rule ref="Generic.Strings.UnnecessaryStringConcat"/>

    <!--
        Exclude some messages when fixing files, but allow them
        to still report errors while checking files.
    -->
    <rule ref="Generic.Commenting.DocComment.MissingShort">
        <severity phpcbf-only="true">0</severity>
    </rule>
    <rule ref="Generic.Commenting.Todo.CommentFound">
        <severity phpcbf-only="true">0</severity>
    </rule>

    <!--
        Allow arguments in function declarations to be aligned
    -->
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals">
      <severity>0</severity>
    </rule>

    <!--
        Turn off the short description for doc comments
    -->
    <rule ref="Generic.Commenting.DocComment.MissingShort">
        <severity>0</severity>
    </rule>

    <!--
        Set different property values for fixing and checking.
    -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property phpcs-only="true" name="lineLimit" value="80"/>
            <property phpcbf-only="true" name="lineLimit" value="120"/>
        </properties>
    </rule>

    <!--
        Skip namespace requirement for kernel directory
    -->
    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
      <exclude-pattern>./app/*</exclude-pattern>
      <exclude-pattern>./kernel/*</exclude-pattern>
    </rule>

    <!--
        Disable camel case check on method names for tests
    -->
    <rule ref="PSR1.Methods.CamelCapsMethodName">
        <exclude-pattern>./Tests/*</exclude-pattern>
    </rule>

    <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
        <exclude-pattern>./Tests/*</exclude-pattern>
    </rule>

    <rule ref="Generic.Commenting.DocComment">
        <exclude-pattern>./Tests/*</exclude-pattern>
    </rule>
</ruleset>
