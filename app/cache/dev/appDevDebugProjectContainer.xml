<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="CarnegieLearningUnboundLdapBundle">CarnegieLearning\UnboundLdapBundle\CarnegieLearningUnboundLdapBundle</parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="unbound_server_bind_address">127.0.0.1</parameter>
    <parameter key="unbound_server_port">6389</parameter>
    <parameter key="unbound_server_base_dn">dc=example,dc=com</parameter>
    <parameter key="unbound_server_ldif">/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/../src/CarnegieLearning/UnboundLdapBundle/Resources/ldap/sample.ldif</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">NotSoSecret</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/../var/sessions/dev</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="unbound_server.bind_address">127.0.0.1</parameter>
    <parameter key="unbound_server.port">6389</parameter>
    <parameter key="unbound_server.base_dn">dc=example,dc=com</parameter>
    <parameter key="unbound_server.ldif">/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/../src/CarnegieLearning/UnboundLdapBundle/Resources/ldap/sample.ldif</parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>t73biz.command.unbound_server_run_command</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument>null</argument>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service" id="kernel.class_cache.cache_warmer"/>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="translator.default"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <tag name="kernel.cache_warmer"/>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection"/>
    </service>
    <service id="service_container" synthetic="true">
      <autowiring-type>Symfony\Component\DependencyInjection\ContainerInterface</autowiring-type>
      <autowiring-type>Symfony\Component\DependencyInjection\Container</autowiring-type>
    </service>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>NotSoSecret</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
            <tag name="config_cache.resource_checker" priority="-990"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <call method="addRendererService">
        <argument>inline</argument>
        <argument>fragment.renderer.inline</argument>
      </call>
      <call method="addRendererService">
        <argument>esi</argument>
        <argument>fragment.renderer.esi</argument>
      </call>
      <call method="addRendererService">
        <argument>ssi</argument>
        <argument>fragment.renderer.ssi</argument>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <argument></argument>
      <argument type="service" id="uri_signer"/>
      <argument></argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="ssi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\Translation\MessageSelector" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="ar" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.cs.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.es.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.fa.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.hu.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.lt.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.nl.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.pl.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.pt_BR.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.sl.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.tr.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.ua.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/vendor/symfony/security-core/Exception/../Resources/translations/security.zh_CN.xlf</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
      <autowiring-type>Symfony\Component\Translation\TranslatorInterface</autowiring-type>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="cookie_httponly">true</argument>
        <argument key="gc_probability">1</argument>
      </argument>
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service">
        <service class="Symfony\Component\Asset\PathPackage" public="false">
          <argument></argument>
          <argument type="service">
            <service class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
          </argument>
          <argument type="service" id="assets.context"/>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>28586</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument>null</argument>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>translator_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\TranslatorListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session.save_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\SaveSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <tag name="monolog.logger" channel="request"/>
          <argument type="service" id="service_container"/>
          <argument type="service">
            <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
              <tag name="monolog.logger" channel="request"/>
              <argument type="service" id="kernel"/>
            </service>
          </argument>
          <argument>null</argument>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="t73biz.command.unbound_server_run_command" class="CarnegieLearning\UnboundLdapBundle\Command\UnboundServerRunCommand">
      <tag name="console.command"/>
      <argument>127.0.0.1</argument>
      <argument>6389</argument>
      <argument>dc=example,dc=com</argument>
      <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/../src/CarnegieLearning/UnboundLdapBundle/Resources/ldap/sample.ldif</argument>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/../var/sessions/dev</argument>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\CachedReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\Common\Cache\FilesystemCache" public="false">
          <argument>/Users/temprc1/projects/php/repos/dev/unbound-ldap-bundle/app/cache/dev/annotations</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="translator" alias="translator.default"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="console.command.carnegielearning_unboundldapbundle_command_unboundserverruncommand" alias="t73biz.command.unbound_server_run_command"/>
  </services>
</container>
